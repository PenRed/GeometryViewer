name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  BUILD_TYPE:   Release
  QT_VERSION:   5.15.2
jobs:
  build:

    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-latest,windows-latest]
          name: [ubuntu,windows]
            
    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version:      ${{ env.QT_VERSION }}
        host:         ${{ matrix.name }}
        target:       desktop
        dir:          ${{ runner.temp }}
        setup-python: false
              
    - name: Create building folder
      run: |
        mkdir ${{ github.workspace }}/src/build
    - name: Build the geometry viewer
      run: |
        cmake -DBUILD_VIEW_SHARED_LIB="OFF" ../
        cmake --build . --target install
      working-directory: ${{ github.workspace }}/src/build

    - name: Build the PenRed shared lib
      run: |
        git clone https://github.com/PenRed/PenRed
        mkdir ${{ github.workspace }}/src/build/PenRed/src/build
        cd ${{ github.workspace }}/src/build/PenRed/src/build
        cmake -DBUILD_C_BINDS=ON -DWITH_NATIVE=ON -DWITH_DICOM=OFF -DWITH_MULTI_THREADING=ON -DWITH_MPI=OFF -DWITH_LB=OFF -DDEVELOPMENT_WARNINGS=OFF ../
        cmake --build . --target install
      working-directory: ${{ github.workspace }}/src/build

    - if: startsWith(matrix.os, 'windows')
      name: Zip build on windows
      working-directory: ${{ github.workspace }}/src/build
      run:  |
        7z a geometryViewer-${{ matrix.os }}.zip GeometryViewer PenRed/src/bindings/C/viewers/geometry/libgeoView*

    - if: startsWith(matrix.os, 'windows') == false
      name: Tar build on linux
      working-directory: ${{ github.workspace }}/src/build
      run:  |
        tar -cvf geometryViewer-${{ matrix.os }}.tar GeometryViewer PenRed/src/bindings/C/viewers/geometry/libgeoView*

    - if: startsWith(matrix.os, 'windows')
      name: Save build artifact on windows
      uses: actions/upload-artifact@master

      with:
        name: geometryViewer-${{ matrix.os }}.zip
        path: ${{ github.workspace }}/src/build      
        
    - if: startsWith(matrix.os, 'windows') == false
      name: Save build artifact on linux
      uses: actions/upload-artifact@master
      with:
        name: geometryViewer-${{ matrix.os }}.tar
        path: ${{ github.workspace }}/src/build      

      
