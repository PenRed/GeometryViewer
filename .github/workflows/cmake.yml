name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  BUILD_TYPE:   Release
  QT_VERSION:   5.15.2
jobs:
  build:

    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-latest,windows-latest]
          name: [Ubuntu,Windows]
            
    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
            uses: jurplel/install-qt-action@v2
            with:
              version:      ${{ env.QT_VERSION }}
              host:         ${{matrix.os}}
              target:       desktop
              dir:          ${{ runner.temp }}
              setup-python: false
              
    - name: Create building folder
      run: |
        mkdir ${{ github.workspace }}/src/build
    - name: Build and compile
      run: |
        cmake -DBUILD_VIEW_SHARED_LIB="OFF" ../
        cmake --build . --target install
      working-directory: ${{ github.workspace }}/src/build
      
    - name: Zip build on windows
        working-directory: ${{ github.workspace }}/src/build
        if: startsWith(matrix.os, 'windows'):
        run:  |
              7z a geometryViewer-${{ matrix.os }}.zip GeometryViewer
              
    - name: Tar build on linux
        working-directory: ${{ github.workspace }}/src/build
        if: !startsWith(matrix.os, 'windows'):
        run:  |
              tar -cvf geometryViewer-${{ matrix.os }}.tar GeometryViewer        

    - name: Save build artifact on windows
      uses: actions/upload-artifact@master
      if: startsWith(matrix.os, 'windows'):
      with:
        name: geometryViewer-${{ matrix.os }}.zip
        path: ${{ github.workspace }}/src/build      

    - name: Save build artifact on linux
      uses: actions/upload-artifact@master
      if: startsWith(matrix.os, 'windows'):
      with:
        name: geometryViewer-${{ matrix.os }}.tar
        path: ${{ github.workspace }}/src/build      

      
