name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  BUILD_TYPE:   Release
  QT_VERSION:   5.15.2
jobs:

  buildLinux:
    name: Build on Linux
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version:      ${{ env.QT_VERSION }}
        host:         linux
        target:       desktop
        dir:          ${{ runner.temp }}
        setup-python: 'true'
        install-deps: 'true'
        cache: 'false'
        set-env: 'true'

    - name: Create building folder
      run: |
        mkdir ${{ github.workspace }}/src/build
    
    - name: Build the geometry viewer
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_VIEW_SHARED_LIB="OFF" -Wno-dev ../
        cmake --build . --config Release
      working-directory: ${{ github.workspace }}/src/build
      
    - name: Save Qt libs
      run: |
        mkdir ${{ github.workspace }}/src/build/lib
        mkdir ${{ github.workspace }}/src/build/lib/platforms
        ldd GeometryViewer | grep "Qt" | cut -d'>' -f2 | cut -d' ' -f2 | xargs -I % cp % lib/
        cp ${{ env.QT_PLUGIN_PATH }}/platforms/*xcb* platforms/
        cp ${{ env.QT_PLUGIN_PATH }}/platforms/*wayland* platforms/
      working-directory: ${{ github.workspace }}/src/build
      
    - name: Build the PenRed shared lib
      run: |
        git clone https://github.com/PenRed/PenRed
        mkdir ${{ github.workspace }}/src/build/PenRed/src/build
        cd ${{ github.workspace }}/src/build/PenRed/src/build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_C_BINDS=ON -DWITH_NATIVE=OFF -DWITH_DICOM=OFF -DWITH_MULTI_THREADING=ON -DWITH_MPI=OFF -DWITH_LB=OFF -DDEVELOPMENT_WARNINGS=OFF ../
        cmake --build . --target install --config Release
      working-directory: ${{ github.workspace }}/src/build

    - name: Move the library
      working-directory: ${{ github.workspace }}/src/build
      run:  |
        mv PenRed/src/bindings/C/viewers/geometry/libgeoView* .
        
    - name: Save build artifact
      uses: actions/upload-artifact@master
      with:
        name: geometryViewer-${{ matrix.os }}
        path: | 
          ${{ github.workspace }}/src/build/GeometryViewer
          ${{ github.workspace }}/src/build/libgeoView*
          ${{ github.workspace }}/src/build/lib

  buildWindows:

    name: Build on Windows
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version:      ${{ env.QT_VERSION }}
        host:         windows
        target:       desktop
        dir:          ${{ runner.temp }}
        setup-python: 'true'
        install-deps: 'true'
        cache: 'false'
        set-env: 'true'
              
    - name: Create building folder
      run: |
        mkdir ${{ github.workspace }}/src/build
    - name: Build the geometry viewer
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_VIEW_SHARED_LIB="OFF" -Wno-dev ../
        cmake --build . --config Release
        cd Release
        windeployqt GeometryViewer.exe --pdb --release
      working-directory: ${{ github.workspace }}/src/build

    - name: Build the PenRed shared lib
      run: |
        git clone https://github.com/PenRed/PenRed
        mkdir ${{ github.workspace }}/src/build/PenRed/src/build
        cd ${{ github.workspace }}/src/build/PenRed/src/build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_C_BINDS=ON -DWITH_NATIVE=OFF -DWITH_DICOM=OFF -DWITH_MULTI_THREADING=ON -DWITH_MPI=OFF -DWITH_LB=OFF -DDEVELOPMENT_WARNINGS=OFF ../
        cmake --build . --target install --config Release
      working-directory: ${{ github.workspace }}/src/build

    - name: Move the library
      working-directory: ${{ github.workspace }}/src/build
      run:  |
        move PenRed/src/bindings/C/viewers/geometry/geoView_C.dll Release/libgeoView_C.dll
        
    - name: Save build artifact
      uses: actions/upload-artifact@master
      with:
        name: geometryViewer-${{ matrix.os }}
        path: | 
          ${{ github.workspace }}\src\build\Release

      
