name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'PenRed branch to compile'
        required: true
        default: 'master'

env:
  BUILD_TYPE:   Release
  QT_VERSION:   6.2.4
jobs:
  build_viewer:
    runs-on: ${{ matrix.os.runner }}
    strategy:
      matrix:
        os:
          - { runner: ubuntu-latest, container: 'quay.io/pypa/manylinux_2_28_x86_64', name: linux }
          - { runner: windows-latest, container: '', name: windows }
          - { runner: macos-latest, container: '', name: mac }
    container: ${{ matrix.os.container }}
    steps:            
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pip
        if: matrix.os.name == 'linux'
        run: |
          python3 -m ensurepip --upgrade
    
      - name: Install Qt manylinux
        if: matrix.os.name == 'linux'
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         ${{ matrix.os.name }}
          target:       desktop
          dir:          ${{ runner.temp }}
          setup-python: 'false'
          install-deps: 'false'
          cache: 'false'
          set-env: 'true'

      - name: Install Qt
        if: matrix.os.name != 'linux'
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         ${{ matrix.os.name }}
          target:       desktop
          dir:          ${{ runner.temp }}
          setup-python: 'true'
          install-deps: 'true'
          cache: 'false'
          set-env: 'true'

      - name: Create building folder
        run: |
          mkdir src/build
    
      - name: Build the geometry viewer and bundle dependencies
        shell: bash
        run: |
          if [[ "${{ matrix.os.name }}" == "windows" ]]; then
            cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_VIEW_SHARED_LIB="OFF" -Wno-dev ../
            cmake --build . --config Release
            cd Release
            windeployqt GeometryViewer.exe --pdb --release          
          elif [[ "${{ matrix.os.name }}" == "mac" ]]; then
            cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_VIEW_SHARED_LIB="OFF" -Wno-dev ../
            cmake --build . --config Release
            mkdir Release
            mv GeometryViewer.app Release/
            cd Release
            macdeployqt GeometryViewer.app -dmg
          else
            cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_VIEW_SHARED_LIB="OFF" -Wno-dev ../
            cmake --build . --config Release
            cp ../../bundle.sh bundle.sh
            bash bundle.sh ${{ env.Qt6_DIR }}            
            cp ../../GeometryViewer.sh GeometryViewer.sh
            chmod +x GeometryViewer
          fi
        working-directory: ${{ github.workspace }}/src/build

      - name: Clone PenRed
        run: |
          git clone https://github.com/PenRed/PenRed --single-branch --branch ${{ github.event.inputs.branch }}
        working-directory: ${{ github.workspace }}/src/build
      
      - name: Build the PenRed shared lib
        shell: bash
        run: |
          # Set architecture-specific flags for macOS
          if [[ "${{ matrix.os.name }}" == "mac" ]]; then
            ARCH_FLAGS="-DCMAKE_OSX_ARCHITECTURES=x86_64;arm64"
          else
            ARCH_FLAGS=""
          fi
        
          mkdir build
          cd build
          cmake $ARCH_FLAGS -DCMAKE_BUILD_TYPE=Release -DBUILD_C_BINDS=ON -DWITH_NATIVE=OFF -DWITH_DICOM=ON -DWITH_MULTI_THREADING=ON -DWITH_EMBEDDED_DB=OFF ..
          cmake --build . --target install --config Release -j 4
        working-directory: ${{ github.workspace }}/src/build/PenRed/src

      - name: Move the library
        working-directory: ${{ github.workspace }}/src/build
        shell: bash
        run:  |
          if [[ "${{ matrix.os.name }}" == "linux" ]]; then
            mv PenRed/src/bindings/C/viewers/geometry/libgeoView* .
          elif [[ "${{ matrix.os.name }}" == "windows" ]]; then
            mv PenRed\\src\\bindings\\C\\viewers\\geometry\\geoView_C.dll Release\\libgeoView_C.dll
          else
            mv PenRed/src/bindings/C/viewers/geometry/libgeoView_C.dylib Release/libgeoView_C.dylib          
        
      - name: Save linux artifacts
        if: matrix.os.name == 'linux'
        uses: actions/upload-artifact@master
        with:
          name: geometryViewer-${{ matrix.os.name }}
          path: | 
            ${{ github.workspace }}/src/build/GeometryViewer
            ${{ github.workspace }}/src/build/GeometryViewer.sh
            ${{ github.workspace }}/src/build/libgeoView*
            ${{ github.workspace }}/src/build/lib
            ${{ github.workspace }}/src/build/platforms
            ${{ github.workspace }}/src/build/plugins

      - name: Save windows artifacts
        if: matrix.os.name == 'windows'
        uses: actions/upload-artifact@master
        with:
          name: geometryViewer-${{ matrix.os.name }}
          path: | 
            ${{ github.workspace }}\src\build\Release

      - name: Save macos artifacts
        if: matrix.os.name == 'mac'
        uses: actions/upload-artifact@master
        with:
          name: geometryViewer-${{ matrix.os.name }}
          path: | 
            ${{ github.workspace }}/src/build/Release
            
